input {
    udp {
        port => 9910
        type => "forti_log"
        tags => ["location_a"]
    }
}


filter {
    #The Fortigate syslog contains a type field as well, we'll need to rename that field in order for this to work
    if [type] == "forti_log" {

        grok {
            match => ["message", "%{SYSLOG5424PRI:syslog_index}%{GREEDYDATA:message}"]
            overwrite => [ "message" ]
            tag_on_failure => [ "forti_grok_failure" ]
        }


        kv {
            source => "message"
            value_split => "="
            #Expects you have csv enable set on your Fortigate. If not I think you'll have to change it to " " but I didn't test that.
            field_split => " "
        }

        mutate {
            #I want to use the timestamp inside the logs instead of Logstash's timestamp so we'll first create a new field containing the date and time fields from the syslog before we convert that to the @timestamp field
            add_field => { "temp_time" => "%{date} %{time}" }
            #The syslog contains a type field which messes with the Logstash type field so we have to rename it.
            rename => { "type" => "ftg_type" }
            rename => { "subtype" => "ftg_subtype" }
            add_field => { "type" => "forti_log" }
            convert => { "rcvdbyte" => "integer" }
            convert => { "sentbyte" => "integer" }
            add_field => { "bc_customerName" => "${BC_CUSTOMER_NAME}" }
            add_field => { "bc_messageType" => "fortigate" }
            add_field => { "bc_apiToken" => "${BC_API_TOKEN}" }
        }

        date {
            match => [ "temp_time", "yyyy-MM-dd HH:mm:ss" ]
            timezone => "UTC"
            target => "@timestamp"
        }

        mutate {
            #add/remove fields as you see fit.
            remove_field => ["syslog_index","syslog5424_pri","path","temp_time","service","date","time","sentpkt","rcvdpkt","log_id","message","poluuid"]
        }
    }
}


output {
    stdout { codec => json }
    if [type] == "forti_log" {
      http {
        url => "${BC_URL}"
        http_method => "post"
        format => "json"
      }
    }
}




