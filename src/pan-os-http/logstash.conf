## Collect transaction data over TCP - no filters necessary
input {
  http {
    port => 9910
    user => "${BC_CUSTOMER_NAME}"
    password => "${BC_API_TOKEN}"
    # Remove default json codec, to handle the backslash in the user
    additional_codecs => {}
    add_field => {
      "type" => "pan"
    }
  }
}

filter {
  # Transform the backslash into a .
  mutate {
    gsub => ["[message]", "globality[\\]", "globality."]
  }
  # Parse the data to json after fix
  json {
    source => "message"
  }
  date {
    locale => "en"
    match => ["time", "UNIX"]
    target => "@timestamp"
    remove_field => ["time"]
  }
  mutate {
    rename => {"_id" => "log_id"}
    add_field => {"bc_customerName" => "${BC_CUSTOMER_NAME}"}
    add_field => {"bc_messageType" => "pan"}
    add_field => {"bc_apiToken" => "${BC_API_TOKEN}"}
  }
}


## Output the record to an appropriate index in Elastic Search
output {
  stdout {codec => json}
  http {
    url => "${BC_URL}"
    http_method => "post"
    format => "json"
  }
}
